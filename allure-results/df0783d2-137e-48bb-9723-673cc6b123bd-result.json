{"name": "test_add_products_and_checkout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff76677e935+77845]\n\tGetHandleVerifier [0x0x7ff76677e990+77936]\n\t(No symbol) [0x0x7ff766539cda]\n\t(No symbol) [0x0x7ff7665906aa]\n\t(No symbol) [0x0x7ff76659095c]\n\t(No symbol) [0x0x7ff7665e3d07]\n\t(No symbol) [0x0x7ff7665b890f]\n\t(No symbol) [0x0x7ff7665e0b07]\n\t(No symbol) [0x0x7ff7665b86a3]\n\t(No symbol) [0x0x7ff766581791]\n\t(No symbol) [0x0x7ff766582523]\n\tGetHandleVerifier [0x0x7ff766a5684d+3059501]\n\tGetHandleVerifier [0x0x7ff766a50c0d+3035885]\n\tGetHandleVerifier [0x0x7ff766a70400+3164896]\n\tGetHandleVerifier [0x0x7ff766798c3e+185118]\n\tGetHandleVerifier [0x0x7ff7667a054f+216111]\n\tGetHandleVerifier [0x0x7ff7667872e4+113092]\n\tGetHandleVerifier [0x0x7ff766787499+113529]\n\tGetHandleVerifier [0x0x7ff76676e298+10616]\n\tBaseThreadInitThunk [0x0x7ff8fd6de8d7+23]\n\tRtlUserThreadStart [0x0x7ff8fea5c34c+44]", "trace": "self = <tests.test_checkout.TestCheckout object at 0x000001652220AAD0>\n\n    def test_add_products_and_checkout(self):\n        with open(\"testsetting.json\") as f:\n            config = json.load(f)\n    \n        self.driver.get(config[\"base_url\"])\n    \n        # Login\n        login = LoginPage(self.driver)\n        login.login(config[\"username\"], config[\"password\"])\n    \n        # Add 3 items\n        inventory = InventoryPage(self.driver)\n        inventory.add_products_to_cart(3)\n        inventory.go_to_cart()\n    \n        # Go to checkout\n        cart = CartPage(self.driver)\n        cart.click_checkout()\n    \n        # Fill info & finish\n        checkout = CheckoutPage(self.driver)\n        checkout.fill_checkout_info(\"John\", \"Doe\", \"70000\")\n    \n        self.driver.save_screenshot(\"before_finish.png\")\n        print(\"URL trước khi finish:\", self.driver.current_url)\n    \n>       checkout.finish_order()\n\ntests\\test_checkout.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\checkout_page.py:28: in finish_order\n    WebDriverWait(self.driver, 20).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2957bf1fa1889cdc39a826396559cb66\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x00000165222A6C00>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff76677e935+77845]\nE       \tGetHandleVerifier [0x0x7ff76677e990+77936]\nE       \t(No symbol) [0x0x7ff766539cda]\nE       \t(No symbol) [0x0x7ff7665906aa]\nE       \t(No symbol) [0x0x7ff76659095c]\nE       \t(No symbol) [0x0x7ff7665e3d07]\nE       \t(No symbol) [0x0x7ff7665b890f]\nE       \t(No symbol) [0x0x7ff7665e0b07]\nE       \t(No symbol) [0x0x7ff7665b86a3]\nE       \t(No symbol) [0x0x7ff766581791]\nE       \t(No symbol) [0x0x7ff766582523]\nE       \tGetHandleVerifier [0x0x7ff766a5684d+3059501]\nE       \tGetHandleVerifier [0x0x7ff766a50c0d+3035885]\nE       \tGetHandleVerifier [0x0x7ff766a70400+3164896]\nE       \tGetHandleVerifier [0x0x7ff766798c3e+185118]\nE       \tGetHandleVerifier [0x0x7ff7667a054f+216111]\nE       \tGetHandleVerifier [0x0x7ff7667872e4+113092]\nE       \tGetHandleVerifier [0x0x7ff766787499+113529]\nE       \tGetHandleVerifier [0x0x7ff76676e298+10616]\nE       \tBaseThreadInitThunk [0x0x7ff8fd6de8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff8fea5c34c+44]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "d84eb6c2-737e-4719-9cba-3e5a1392b853-attachment.txt", "type": "text/plain"}], "start": 1753612148819, "stop": 1753612170694, "uuid": "d2a77f18-4449-4041-a6d1-f08ed23e6c35", "historyId": "fc3ac0b1ae094a15ae71934c17642b25", "testCaseId": "fc3ac0b1ae094a15ae71934c17642b25", "fullName": "tests.test_checkout.TestCheckout#test_add_products_and_checkout", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_checkout"}, {"name": "subSuite", "value": "TestCheckout"}, {"name": "host", "value": "AnhHuy"}, {"name": "thread", "value": "24584-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_checkout"}]}